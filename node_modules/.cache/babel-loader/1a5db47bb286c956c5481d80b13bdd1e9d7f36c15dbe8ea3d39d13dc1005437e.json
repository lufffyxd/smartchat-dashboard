{"ast":null,"code":"class NewsService {\n  constructor() {\n    this.apiKey = process.env.REACT_APP_NEWSAPI_KEY;\n    this.apiUrl = 'https://newsapi.org/v2';\n  }\n  async getTopHeadlines(category = 'technology', pageSize = 5) {\n    try {\n      // Using a CORS proxy for the free tier\n      const proxyUrl = 'https://api.allorigins.win/raw?url=';\n      const targetUrl = `${this.apiUrl}/top-headlines?category=${category}&pageSize=${pageSize}&apiKey=${this.apiKey}`;\n      const response = await fetch(proxyUrl + encodeURIComponent(targetUrl));\n      const data = await response.json();\n      if (data.status === 'ok' && data.articles) {\n        return data.articles.map(article => {\n          var _article$source;\n          return {\n            title: article.title,\n            description: article.description || '',\n            url: article.url,\n            publishedAt: article.publishedAt,\n            source: ((_article$source = article.source) === null || _article$source === void 0 ? void 0 : _article$source.name) || 'Unknown'\n          };\n        });\n      }\n      return [];\n    } catch (error) {\n      console.error('News API Error:', error);\n      return [];\n    }\n  }\n  async searchNews(query, pageSize = 5) {\n    try {\n      const proxyUrl = 'https://api.allorigins.win/raw?url=';\n      const targetUrl = `${this.apiUrl}/everything?q=${encodeURIComponent(query)}&pageSize=${pageSize}&apiKey=${this.apiKey}`;\n      const response = await fetch(proxyUrl + encodeURIComponent(targetUrl));\n      const data = await response.json();\n      if (data.status === 'ok' && data.articles) {\n        return data.articles.map(article => {\n          var _article$source2;\n          return {\n            title: article.title,\n            description: article.description || '',\n            url: article.url,\n            publishedAt: article.publishedAt,\n            source: ((_article$source2 = article.source) === null || _article$source2 === void 0 ? void 0 : _article$source2.name) || 'Unknown'\n          };\n        });\n      }\n      return [];\n    } catch (error) {\n      console.error('News Search Error:', error);\n      return [];\n    }\n  }\n  formatNewsForChat(articles) {\n    if (articles.length === 0) {\n      return \"Sorry, I couldn't find any recent news on that topic.\";\n    }\n    let response = \"Here are the latest news updates:\\n\\n\";\n    articles.forEach((article, index) => {\n      const date = new Date(article.publishedAt).toLocaleDateString();\n      response += `${index + 1}. **${article.title}**\\n`;\n      response += `   ${article.description}\\n`;\n      response += `   Source: ${article.source} | ${date}\\n\\n`;\n    });\n    return response;\n  }\n}\nexport default new NewsService();","map":{"version":3,"names":["NewsService","constructor","apiKey","process","env","REACT_APP_NEWSAPI_KEY","apiUrl","getTopHeadlines","category","pageSize","proxyUrl","targetUrl","response","fetch","encodeURIComponent","data","json","status","articles","map","article","_article$source","title","description","url","publishedAt","source","name","error","console","searchNews","query","_article$source2","formatNewsForChat","length","forEach","index","date","Date","toLocaleDateString"],"sources":["C:/Users/Click/desktop/smartchat-dashboard/src/utils/newsService.js"],"sourcesContent":["class NewsService {\r\n  constructor() {\r\n    this.apiKey = process.env.REACT_APP_NEWSAPI_KEY;\r\n    this.apiUrl = 'https://newsapi.org/v2';\r\n  }\r\n\r\n  async getTopHeadlines(category = 'technology', pageSize = 5) {\r\n    try {\r\n      // Using a CORS proxy for the free tier\r\n      const proxyUrl = 'https://api.allorigins.win/raw?url=';\r\n      const targetUrl = `${this.apiUrl}/top-headlines?category=${category}&pageSize=${pageSize}&apiKey=${this.apiKey}`;\r\n      \r\n      const response = await fetch(proxyUrl + encodeURIComponent(targetUrl));\r\n      const data = await response.json();\r\n      \r\n      if (data.status === 'ok' && data.articles) {\r\n        return data.articles.map(article => ({\r\n          title: article.title,\r\n          description: article.description || '',\r\n          url: article.url,\r\n          publishedAt: article.publishedAt,\r\n          source: article.source?.name || 'Unknown'\r\n        }));\r\n      }\r\n      \r\n      return [];\r\n    } catch (error) {\r\n      console.error('News API Error:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async searchNews(query, pageSize = 5) {\r\n    try {\r\n      const proxyUrl = 'https://api.allorigins.win/raw?url=';\r\n      const targetUrl = `${this.apiUrl}/everything?q=${encodeURIComponent(query)}&pageSize=${pageSize}&apiKey=${this.apiKey}`;\r\n      \r\n      const response = await fetch(proxyUrl + encodeURIComponent(targetUrl));\r\n      const data = await response.json();\r\n      \r\n      if (data.status === 'ok' && data.articles) {\r\n        return data.articles.map(article => ({\r\n          title: article.title,\r\n          description: article.description || '',\r\n          url: article.url,\r\n          publishedAt: article.publishedAt,\r\n          source: article.source?.name || 'Unknown'\r\n        }));\r\n      }\r\n      \r\n      return [];\r\n    } catch (error) {\r\n      console.error('News Search Error:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  formatNewsForChat(articles) {\r\n    if (articles.length === 0) {\r\n      return \"Sorry, I couldn't find any recent news on that topic.\";\r\n    }\r\n    \r\n    let response = \"Here are the latest news updates:\\n\\n\";\r\n    articles.forEach((article, index) => {\r\n      const date = new Date(article.publishedAt).toLocaleDateString();\r\n      response += `${index + 1}. **${article.title}**\\n`;\r\n      response += `   ${article.description}\\n`;\r\n      response += `   Source: ${article.source} | ${date}\\n\\n`;\r\n    });\r\n    \r\n    return response;\r\n  }\r\n}\r\n\r\nexport default new NewsService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}